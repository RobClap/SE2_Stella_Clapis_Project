taxiDriver:Actor
taxiUI:ClientSide Application
user:Actor
clientUI:ClientSide Application
httpHandler:Web Server
webpageCreator:Web Server
notificationModule:Web Server
dbconnector:Web Server
accounts:DBMS
requestsAndReservations:DBMS

user:clientUI.request a taxi 
clientUI:confirmed=httpHandler.request_taxi
httpHandler:confirmation page=webpageCreator.perform_request
webpageCreator:request_created=dbconnector.create_request
dbconnector:auth valid=accounts.check_auth
dbconnector:placed=requestsAndReservations.create
webpageCreator:>notificationModule.handle_request
clientUI:user.confirmation_page
[c:loop until a taxi driver accepts]
	notificationModule:taxi=dbconnector.get_first_taxi
	dbconnector:active taxi=accounts.get_first_in_queue
	notificationModule:notified=taxiUI.notify_call
	taxiUI:taxiDriver.notify
	notificationModule:listen_for_answer
	[c:alt possible responses]
		--[refusal]
		taxiDriver:taxiUI.refuse
		taxiUI:ok=httpHandler.refused
		httpHandler:confirm refusal=webpageCreator.refuse
		webpageCreator:marked=dbconnector.mark_as_inactive
		dbconnector:accounts.mark_inactive
		taxiUI:taxiDriver.homepage&
		taxiUI:stop
		--[timeout]
		taxiDriver:taxiUI.no_interaction
		taxiUI:handled=httpHandler.timeout
		httpHandler:timeout handled=webpageCreator.handle_timeour
		webpageCreator:moved=dbconnector.move_to_bottom
		dbconnector:accounts.update_login_time(Now)
		taxiUI:stop
		--[acceptance]
		taxiDriver:taxiUI.accept
		taxiUI:confirmed=httpHandler.accept
	[/c]
[/c]
httpHandler:confirmed=webpageCreator.accept
webpageCreator:marked=dbconnector.mark_request_as_active
dbconnector:done=requestsAndReservations.update
dbconnector:>notificationModule.request_answered_tigger&
notificationModule:notified=clientUI.taxi_is_coming
clientUI:user.taxi_is_coming
clientUI:stop
taxiUI:taxiDriver.drive_page
taxiUI:stop

