\documentclass{article}
\usepackage{graphicx}
\graphicspath{{images/}}
\usepackage{listings}
\usepackage{underscore}
\usepackage[bookmarks=true]{hyperref}
\newcommand{\comment}[1]{}
\author{Roberto Clapis (841859), Erica Stella (854443)} 
\date{\today}
\title{Politecnico di Milano
	\\A.A. 2015\@-\@2016
	\\Software Engineering 2: ``TAXInseconds''
	\\\textbf{R}equirements \textbf{A}nalysis \\and\\ \textbf{S}pecifications \textbf{D}ocument}
\hypersetup{pdftitle={Software Requirement Specification},    % title
	pdfauthor={Roberto Clapis, Erica Stella},                     % author
	pdfsubject={TeX and LaTeX},                        % subject of the document
	pdfkeywords={TeX, LaTeX, taxi, RASD, SoftwareEngineering2}, % list of keywords
	colorlinks=true,       % false: boxed links; true: colored links
	linkcolor=black,       % color of internal links
	citecolor=blue,       % color of links to bibliography
	filecolor=black,        % color of file links
	urlcolor=purple,        % color of external links
}
\begin{document}
\maketitle
\includegraphics{polimi-logo}
\clearpage
\tableofcontents
\clearpage

\section{Introduction}

\subsection{Purpose}
This document represent the Requirement Analysis and Specification Document (RASD). It aims at explaining the domain of the system to be developed and the system itself in terms of functional requirements, nonfunctional requirements and constraints. It also provides several models of the system and typical use cases. It is intended for all the developers who will have to implement the system, the testers who will have to determine if the requirements have been met and the system analysts who will have to write specifications for other system that will relate to this one. It is also intended as a contractual basis thus being legally binding.

\subsection{Actual System}
The government of the city wants to optimize its taxi service with a completely new application. Therefore, we assume there are no previous systems to take into account.

\subsection{Scope}
The aim of the project TAXINSECONDS is to provide a new application to optimize the taxi service of the city that will be accessible via browser, mobile or public APIs.
\\The application will be available to the users in web and mobile forms and will have public APIs in order to expand and improve the service with additional features.
\\The city managed by TAXINSECONDS is divided in zones of 2 km\textsuperscript{2} each and every zone has its own queue of taxis. The queues are automatically computed by the system with the information it receives from the GPS of the taxis. 
\\Taxi drivers can be available or not. Only available taxi drivers can be in a queue. When a taxi driver changes her state from not available to available the system automatically adds her to the queue of the zone she is currently in, based on the information of the GPS of her taxi. 
\\Users that are not registered can only see the estimated time of arrival of the nearest taxi with TAXINSECONDS.\@
\\Registered users can also request a taxi or make a reservation for a taxi. Reservations can only be made at least two hours before the ride and must be done specifying the starting location, the destination and the meeting time. Requests, instead, only need the starting location and the destination.
\\When a request is made, the first taxi driver of the queue of the starting location's zone is notified for accepting or rejecting the request. If a taxi driver rejects a request her state is put on unavailable until she changes it back to available. If a taxi driver doesn't accept or reject a request within 1 minute, the request will be passed on to the next taxi driver in the queue and the first one will be moved to the end of the queue. If there are no available taxis in the zone of the request the system will propagate the request to the closest available taxi.
\\When a request is accepted, the registered user that has made the request receives a notification from the system informing her of the code of the incoming taxi and the estimated time of arrival.
\\When a reservation is made, the system confirms it to the user and allocates a taxi 10 minutes before the meeting time. If a taxi for that zone is not available the request is then handled by finding the closest available taxi.
<<<<<<< HEAD
\\Requests can be canceled before they'have been accepted by a taxi driver while reservation can be canceled until 10 minutes before the meeting time.
=======
\\Requests can be cancelled before they have been accepted by a taxi driver while reservation can be cancelled until 10 minutes before the meeting time.

>>>>>>> 4da00d1d1f6305b5d5e13a05210018b3fbe10876
\subsection{Goals}
\begin{itemize}
	\item Provide an easy way to request a taxi.
	\item Provide an easy way to reserve a taxi.
	\item Guarantee a fair management of the taxis queue.
	\item Create a flexible system that allows expansion and interactions with other services.
\end{itemize}

\subsection{Definition and Acronyms}

\subsubsection{Definitions}
\begin{itemize}
<<<<<<< HEAD
	\item registered user
	\item guest
	\item administrator
	\item request
	\item reservation
	\item state of a taxi driver
	\item meeting time
	\item login token
	\item Secure Channel
	\item nearest taxi
=======
	\item \textit{Registered user:} a person that has already signed up and logged in the system.
	\item \textit{Administrator:} a person authorized to modify the content of the DBMS of the system.
	\item \textit{Request:} a call from a registered user who needs a taxi as soon as possible.
	\item \textit{Meeting time:} the date and time in which the registered user needs the taxi.
	\item \textit{Reservation:} a %TODO fare fucking definizione
	\item \textit{State of a taxi driver:} the state the taxi driver is currently in. The state can be available or not available. Taxi drivers can be assigned to a request or a reservation by the system only if they're available.
	\item \textit{Closest available taxi:} if there are no taxis in the zone of the request or of the reservation, the system automatically finds the closest available taxi choosing the one with the smallest estimated time of arrival from the available taxis of the other zones.
>>>>>>> 4da00d1d1f6305b5d5e13a05210018b3fbe10876
\end{itemize}

\subsubsection{Acronyms}
\begin{itemize}
	\item ETA:\@ estimated time of arrival: the time, estimated by the system, that the closest available taxi will take to get to the starting location of the ride.
	\item CAT:\@ closest available taxi (see definition in the previous paragraph).
\end{itemize}
\subsection{Actors}
\begin{itemize}
<<<<<<< HEAD
	\item \textit{Users}: user are able to login or to ask the system for an ETA.\@
	\item \textit{Registered users}: after successfully logging in, registered users can request or reserve taxis.
	\item \textit{Taxi drivers}: after successfully logging in, taxi drivers are able to set their current state as available or not and to accept or refuse requests.
	\item \textit{Administrator}: after logging in the admin will be the only user allowed to edit the drivers list.
=======
	\item Taxi driver: after successfully logging in, taxi drivers are able to set their current state as available or not and to accept or refuse requests.
	\item User: user are able to login or to ask the system for an ETA.\@
	\item Registered user: after successfully logging in, registered users can request or reserve taxis.
		%registered user
		%guest
		%administrator
>>>>>>> 4da00d1d1f6305b5d5e13a05210018b3fbe10876
\end{itemize}

\subsection{References}
\begin{itemize}
	\item The \href{run:./external_references/assignments.pdf}{document} with the assignment for the project
	\item The \href{run:./external_references/assignments.pdf}{IEEE Standard for SRS } 
\end{itemize}
\subsection{Overview}
This document is structured in three parts:
\begin{itemize}
	\item Introduction: gives an high-level description of the software purposes and context.
	\item Overall Description: gives a general description of the application, focusing on the context of the system, going in details about domain assumptions and constraint. The aim of this section is to provide a context to the whole project and show its integration with the real world.
	\item Specific Requirements: this section contains all of the software requirements to a level of detail aimed to be enough to design a system to satisfy the said requirements, and testers to test that the system actually satisfies them. It also contains the detailed description of the possible interactions between the system and the world with a simulation and preview of the expected response of the system with given stimulation. (Details are given with Alloy specifications and UML diagrams)
\end{itemize}


\section{Overall description}
\subsection{Product perspective}
The TAXINSECONDS application will be released as a web application and as a mobile application. 
There are no existing systems to integrate it with. 
\\It will provide a total of 4 main interfaces:
\begin{itemize}
	\item For the users in both the
		\begin{itemize}
			\item Registered user mode
			\item Guest mode
		\end{itemize}
	\item For taxi drivers 
	\item For administrators
	\item A lower level interface for APIs
\end{itemize}

\subsubsection{System interfaces}
\subsubsection{User Interfaces}
\subsubsection{Hardware Interfaces}%		DOPO NEI REQUIREMENTS
\subsubsection{Software Interfaces}
\subsubsection{Communication Interfaces}
\subsubsection{Operations} 
\subsection{Product functions}
\subsection{User characteristics}
\subsection{Constraints}
\subsection{Assumptions and dependencies}
\subsubsection{Domain Assumptions}
\begin{itemize}
	\item All taxi drivers who intend to use the service will have a mobile phone with one of the supported mobile OSs
	\item All taxi drivers will have a phone with GPS functionality
	\item The taxi drivers will have to grant the system the rights to handle their taxi codes
	\item Taxi drivers' phones will have an internet connection
	\item Clients will have access to the internet and a device with GPS integrated 
	\item Clients have a valid email address
	\item Clients have a credit/debt card 
	\item Clients allow the app to access their credit in order to pay for the service
	\item When accessing from the website the clients will have to grant permission to the application to read the device's position
<<<<<<< HEAD
	\item The Owner of the app will have to build or rent an always-on DBMS and host for the Server-Side part of the app
=======
	\item A taxi driver can't be available and not available at the same time
>>>>>>> 4da00d1d1f6305b5d5e13a05210018b3fbe10876
\end{itemize}
\clearpage
\section{Specific requirements}
\subsection{Functional Requirements}
On the user side:\@
\begin{itemize}
	\item For the non logged in user (on both the WEB and Mobile interface):
		\begin{itemize}
			\item Provide information about taxis queues and availability 
			\item Registration in order to become a registered user
			\item Login for registered users
			\item ``change personal data'' procedure for registered users
		\end{itemize}
	\item For the logged in user (on both the WEB and Mobile interface):
		\begin{itemize}
			\item Provide information about taxis queues and availability 
			\item Place a call for a taxi at the current position 
			\item Make a reservation for later
			\item Logout
		\end{itemize}
	\item Through the API:\@
		\begin{itemize}
			\item Get the queue status for a given position
			\item Get the ETA for a taxi for a given position
			\item Establish a Secure Channel 
			\item Obtain a login-token using valid credentials through a previously established Secure Channel
			\item Using a valid login-token:\@
				\begin{itemize}
					\item Place a call for a given position
					\item Place a reservation for a given position
					\item Require the system to send a push message for updates about the status of a previous request
					\item Logout (this will close the secure channel and invalidate the login token) 
				\end{itemize}
		\end{itemize}
\end{itemize}
On the taxi driver side (there will be no Web interface in this case):\@
\begin{itemize}
	\item For the non logged in driver:
		\begin{itemize}
			\item Login for a registered driver 
			\item ``Reset password'' procedure for registered drivers
		\end{itemize}
	\item For the logged in driver:
		\begin{itemize}
			\item If credentials have been invalidated a ``reset password'' procedure will be mandatory
			\item Toggle the availability of the driver
			\item Notify for new calls
			\item Allow to accept or refuse a call
			\item Handle disconnection 
			\item Handle timeout (if reaching the client takes too much time)
			\item Log out
		\end{itemize}
	\item Through the API:\@
		\begin{itemize}
			\item Establish a Secure Channel 
			\item Obtain a login-token using valid credentials through a previously established Secure Channel
			\item Using a valid login-token:\@
				\begin{itemize}
					\item Toggle the driver state
					\item Send a notification when a call is made for the driver
					\item Accept the answer to the call, whether the answer is Acceptance or Refusal
					\item Handle disconnection
					\item Handle timeout (if no taxi reach the client in time)%TODO e come fa a saperlo?
					\item Log out (invalidation of the token)
				\end{itemize}
			\item 
		\end{itemize}
\end{itemize}
On the admin side:\@
\begin{itemize}
	\item For the non logged in admin:
		\begin{itemize}
			\item Log in
		\end{itemize}
	\item For the logged in admin:
		\begin{itemize}
			\item Add a new taxi driver
			\item Remove a taxi driver
			\item Invalidate a taxi driver's credentials 
			\item Set the area of the map handled by the system
			\item Change credentials for the admin
			\item Log out
		\end{itemize}
\end{itemize}
\subsection{Non functional requirements}
\begin{itemize}
	\item \textit{Cross platform}
		\begin{itemize}
			\item There will be a UI for mobile and one for the Web platform
			\item At least Android>=4.0 and iOS will be supported for the mobile version %TODO insert a meaningful iOS version
			\item At least Edge, Chrome and Firefox will ahve to be supported
			\item The web application will have to use HTML5
		\end{itemize}
	\item \textit{Availability}
		\begin{itemize}
			\item The application must always respond, even if no taxi are available at least with a ``No taxi available'' response
			\item If a query is taking some time a spinner will be shown, the app must never freeze
			\item The system must store securely user data for both drivers and clients in an always-reachable database
			\item Regular Backups will be made in order to reduce or prevent data loss
		\end{itemize}
	\item \textit{Usability}
		\begin{itemize}
			\item The UIs have to be user friendly and with a few, clear functionalities
		\end{itemize}
	\item \textit{Security}
		\begin{itemize}
			\item In no situation sensible data will pass through an insecure channel
			\item No one should generally be able to impersonate the taxi drivers, the clients or the admin without proper autentication
		\end{itemize}
%	\item 
\end{itemize}
\subsection{Scenarios}
\subsubsection{Scenario 1}
Blair The Witch had to take her magical broom to the mechanic for the annual revision but she needs to go shopping to refill her stockpile of frog?s tails. Her friend Mizune has told her about TAXInseconds, so she decides to give it a try. After downloading it on her smartphone, she signs up compiling the registration form with her username, password, email and credit card data. Now she can complain about how slow car-based transports are!
\subsubsection{Scenario 2}
Suzuka is having a date tonight but, unfortunately, her car doesn?t want to start. After several failures, she decides to use TAXInasecond. After logging in, she requests a taxi specifying her home as the starting location and the restaurant?s address as the destination. The system notifies Takeshi, the first taxi driver of the queue in Suzuka?s zone, of the request. Takeshi accepts the request and the system sends Suzuka the code of Takeshi?s taxi and the ETA so she can finally get to her date.
\subsubsection{Scenario 3}
Ash Ketchum has to start his new adventure in Hoenn tomorrow but his mom is busy cleaning the house with Mr.\ Mime so she can?t take him to the airport to meet Prof.\ Oak. Ash decides to use once again TAXINSECONDS to reserve a taxi. After logging in, he makes a reservation for a taxi specifying the starting location as Pallet town, the destination and the meeting time. The morning after, the system allocates Brock?s taxi for the reservation and sends his code to Ash so that he knows who he?ll meet to start his new adventure. 
\end{document}



\comment{%TEMPLATE FOR BULLETS
	\begin{itemize}
		\item  
	\end{itemize}
}
